
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<meta name="referrer" content="same-origin">
<title>{{user.game_id}} - DragonBound User</title>
<script src="/cdn-cgi/apps/head/iR8OSjNSfwcexYD8YdkF6QmafNg.js"></script><script src="/static/js/jquery-3.5.0.min.js?2"></script>
<script src="/static/js/QTransform.js"></script>
<script src="/static/js/Filter.js?9"></script>
<link rel="stylesheet" href="/static/DragonBook/DragonBook.min.css?25" />
<script src="/static/DragonBook/DragonBook.min.js?56"></script>


<meta property="og:type" content="website" />
<meta property="og:title" content="{{user.game_id}} - DragonBound User" />
<meta property="og:description" content="{{user.game_id}} DragonBound User Page. See my player info and chat with me." />
<meta property="og:image" content="https://dragon.cloud/OD9yXK0RbF4uDi0PDNt_Mw.gif" />
<meta property="og:url" content="https://dragonbound.net/user/{{user.game_id}}" />
<meta property="fb:app_id" content="823326844414352" />
<script async src="//connect.facebook.net/en_US/sdk.js#xfbml=1&appId=823326844414352&version=v8.0"></script>
<script src="/static/DragonBook/moment.min.js"></script>
<script src="/static/DragonBook/Chart.min.js"></script>
<style>
    #reportBtn {
        position: absolute;
        right: 7px;
        bottom: 7px;
    }
    #reportMenu {
        position: absolute;
        right: 7px;
        bottom: 7px;
        padding: 7px;
        background: #635782;
        border-radius: 4px;
        z-index: 9;
    }
    .hide {
        display: none;
    }
    .PostTextArea {
        width: 492px;
        border: none;
        padding: 8px;
        height: 30px;
        transition: all 0.4s;
    }
    .PostTextArea.Focus {
        height: 80px;
    }
    .PostTime {
        font-size: 10px;
        white-space: nowrap;
        margin-left: 10px;
        vertical-align: bottom;
    }
    .DeletePost {
        float: right;
        margin: 10px;
        background: url(/static/images/trash.gif);
        width: 16px;
        height: 16px;
        border: none;
        color: transparent;
        cursor: pointer;
    }
    .DeleteComment {
        float: right;
        margin: 0 10px 10px 10px;
        background: url(/static/images/trash.gif);
        width: 16px;
        height: 16px;
        border: none;
        color: transparent;
        cursor: pointer;
    }
    .BlockPost {
        float: right;
        background: url(/static/images/block.png);
        width: 32px;
        height: 32px;
        border: none;
        color: transparent;
        cursor: pointer;
    }
    .BlockComment {
        float: right;
        background: url(/static/images/block.png);
        background-size: contain;
        width: 16px;
        height: 16px;
        border: none;
        color: transparent;
        cursor: pointer;
    }
    .boxBodyPost {
        word-wrap: break-word;
    }
    #PostBtn {
        cursor: pointer;
    }
    .Comment {
        position: relative;
    }
    .CommentT {
        width: 91%;
        margin: auto;
        word-wrap: break-word;
    }
    .Comment:hover {

    }
    .CommentName {
        font-weight: bold;
    }
    .ShowOnHover {
        position: absolute;
        right: 0;
        top:0;
    }
    .CommentText {
        width:90%;
        padding: 2px;
    }
    .Center {
        text-align: center;
    }
    .ShowOnHover {
        display: none
    }
    .Comment:hover > .ShowOnHover {
        display: block
    }
    #MyPlayer {
        position: absolute;
        top: 150px;
        right: 160px;
        transform: scale(1.5);
        pointer-events: none;
    }
    .PostTitleEmo .emo {
         vertical-align: baseline
    }
    #statsText {
        padding: 10px;
        font-size: 14px;
    }
    /*.boxTitle {*/
        /*position: relative;*/
    /*}*/
    /*.PrivateIcon {*/
        /*background: url(/static/images/private32.png);*/
        /*width: 32px;*/
        /*height: 32px;*/
        /*position: absolute;*/
        /*right: 0;*/
        /*top: 0;*/
    /*}*/
    .colorchange {
        animation: colorchange 5s forwards;
        -webkit-animation: colorchange 5s forwards;
    }
    @keyframes colorchange
    {
      0%   {background: #0f0;}
      25%   {background: #0f0;}
      100% {background: white;}
    }
    .GMPost {font-weight: bold}
    .GMPostTitle {background: #ffd}
    .new {background: #ff7}
    .goldShadow {
        color: #ffd273;
        text-shadow: -1px 0 2px black, 0 1px 2px black, 1px 0 2px black, 0 -1px 2px black;
    }
</style>
<script>
    var user_id = 10266377

    function GetLanguage() {
        if(localStorage.myLang == 'es' || localStorage.lang == '0') return 'es'
        var l = navigator.language || navigator.userLanguage
        if(l.indexOf('es') == 0) return 'es'
        else return 'en'
    }
    var lang = GetLanguage()


    $(function() {
        $('#reportBtn').click(function() {
            $('#reportMenu').show('fast')
        })
        $('#reportCancel').click(function() {
            $('#reportMenu').hide('fast')
        })
        $('#reportPrn').click(function() {
            $.post('/report', {t:1, u:user_id}, function(res) {
//                alert(res)
                $('#reportPrn').replaceWith(''+res)
            })
        })

        // translate
        if(lang == 'es') {
//            console.log('Spanish')
            $('#reportBtn').html('Reportar')
            $('#reportPrn').html('Reportar imagen pornográfica o inapropiada')
            $('#reportCancel').html('Cancelar')
        }

        // postTextArea
        $('#postTextArea').focus(function() {
            $(this).addClass('Focus')
        }).blur(function() {
            var div = $(this)
            setTimeout(function() {
                div.removeClass('Focus')
            },100)

        })

        $('#FormPost').on('submit',function() {
            return $('#postTextArea').val() != ''
        })
        $('.PostCommentForm').on('submit',function() {
            return $(this).find('.CommentText').val() != ''
        })

        // disallow sending all forms after the first one was sent     TODO: show something to the user
        // (to avoid sending the same form twice or 2 different forms if clicked fast and slow internet)
        $('form').on('submit', function(e) {
            if(e.isPropagationStopped()) return   // we stopped it already on other handler. ex: not valid form
            $('form').unbind('submit').on('submit', function() {
                return false
            })
        })

        var s = $(atob('c2NyaXB0'))
        for(var i=0;i<s.length;i++) {
            var $tag = s.eq(i), tag=$tag[0]
            if(!tag.async) $tag.remove()
        }

        var str_confirm_block = 'All posts and comments of this user will be deleted, and he will not be able to post on your page. Are you sure?'
        $('.BlockPost,.BlockComment').click(function() {
            return confirm(str_confirm_block)
        })

        // translate
        if(lang=='es') {
            str_confirm_block = 'Todas las publicaciones y comentarios de este usuario serán eliminados; y no será capaz de publicar en tu página. ¿Estás seguro?'
            $('#postTextArea').attr('placeholder','¿Qué estás pensando?')
            $('.CommentText').attr('placeholder','Escribe un comentario...')
            $('#PostBtn').val('Publicar')
            $('#whocanpost').text('¿Quien puede publicar?')
            $('.textEveryone').text('Todos')
            $('.textFriends').text('Amigos')
            $('.textOnlyMe').text('Sólo Yo')
        }

        // GP graph
        DrawGraph()

        $('#postPermissionSelect').change(function() {
            $('#postPermissionSelect').css('background', 'yellow').removeClass('colorchange')
            $.post('/dragonbook/set', {postPerm:$('#postPermissionSelect').val()}, function(e) {
//                console.info(e)
                $('#postPermissionSelect').css('background', 'lightgreen').addClass('colorchange')
//                setTimeout(function() {$('#postPermissionSelect').css('background', '#afa')}, 700)
//                setTimeout(function() {$('#postPermissionSelect').css('background', '#dfd')}, 1400)
//                setTimeout(function() {$('#postPermissionSelect').css('background', 'white')}, 2100)
            }).error(function(e) {
                console.error('ERROR', e)
                $('#postPermissionSelect').css('background', 'lightred')
            })
        })
    })

    var TIME_SECOND = 1000,
        TIME_MINUTE = 60*TIME_SECOND,
        TIME_HOUR = 60*TIME_MINUTE,
        TIME_DAY = 24*TIME_HOUR

    var tzs = ''
    var tz
    function MsToDate(ms) {
        var d = new Date(ms)
        if(tz == undefined) {
            tz = d.getTimezoneOffset()/-60
            if(localStorage.myTZ > -13 && localStorage.myTZ < 13) tz = Number(localStorage.myTZ)
                tzs = '('+ (tz<0? 'GMT'+tz : (tz>0? 'GMT+'+tz : 'UTC')) +')'
        }
        return new Date(d.getTime() + 3600000*tz)
    }
    function HourLabel(ms) {
        var d = MsToDate(ms)
        return d.getUTCHours()+':00 '+d.getUTCDate()+'/'+(d.getUTCMonth()+1)
    }
    var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']
    function DayLabel(ms) {
        var d = MsToDate(ms)
        return months[d.getUTCMonth()]+' '+d.getUTCDate()
    }

    function DrawGraph() {
        var gp_graph = JSON.parse('[[44159,17,0,0],[44162,4,0,0]]')
        var from_hour = Number('43849')
        var hour_now = Number('44185')
//        console.log('from_hour:',from_hour,'hour_now:',hour_now,'gp_graph:', gp_graph)
        if(!gp_graph || !gp_graph.length) return

        $('#GPStats').removeClass('hide')

        var from_hour1 = hour_now - 24*2  // hourly shows last 2 days

        gp_graph.sort(function(a,b) {return a[0]-b[0]})  // sort by time

        var baseDate = Date.UTC(2016,1,1)
        var i, day, start_day = 0
        var labels = [], labelsDaily = [], valuesHourlyWin = [], valuesHourlyLose = []
        var valuesHourlyGP = [], valuesDailyGP = [], valuesDailyWin = [], valuesDailyLose = []
        var numOfGames = 0, sumOfGP = 0, numOfWins = 0
        var hours = 0
        var days = 0

        // zero all - hourly
        for(i=from_hour1; i<=hour_now; i++) {
            labels[i-from_hour1] = HourLabel(baseDate + i*TIME_HOUR)
            valuesHourlyGP[i-from_hour1] = valuesHourlyWin[i-from_hour1] = valuesHourlyLose[i-from_hour1] = 0
        }
        // zero all - daily
        for(i=from_hour; i<=hour_now; i++) {
            hours++
//            if((i-from_hour) % 24 == 0) {
            if((i+tz+240) % 24 == 0) {
                day = Math.floor((i+tz)/24)
                if(!start_day) start_day = day
                labelsDaily[day-start_day] = DayLabel(baseDate + day*TIME_DAY - tz*TIME_HOUR)
                valuesDailyGP[day-start_day] = valuesDailyWin[day-start_day] = valuesDailyLose[day-start_day] = 0
                days++
            }
//            console.log('i:',i,'from_hour:', from_hour,'i-from_hour:',i-from_hour,'i+tz % 24:', (i+tz+240) % 24, 'hour_now:', hour_now)
        }
        // sum data (skipping zero points)
        for(i=0; i<gp_graph.length; i++) {
            // index
            var hour = gp_graph[i][0]
            day = Math.floor((hour+tz)/24)
            // sum
            sumOfGP += gp_graph[i][1]
            numOfGames += gp_graph[i][2] + gp_graph[i][3]
            numOfWins += gp_graph[i][2]
            // hourly
            if(valuesHourlyGP[hour-from_hour1] != undefined) {
                valuesHourlyGP[hour-from_hour1] += gp_graph[i][1]
                valuesHourlyWin[hour-from_hour1] += gp_graph[i][2]
                valuesHourlyLose[hour-from_hour1] += gp_graph[i][3]
            }
            // daily
            if(valuesDailyGP[day-start_day] != undefined) {
                valuesDailyGP[day-start_day] += gp_graph[i][1]
                valuesDailyWin[day-start_day] += gp_graph[i][2]
                valuesDailyLose[day-start_day] += gp_graph[i][3]
            }
        }

        var avgGpPerGame = numOfGames ? Math.round(sumOfGP/numOfGames*10)/10 : 0
        var avgGpPerHour = hours ? Math.round(sumOfGP/hours*10)/10 : 0
        var avgGpPerDay = days ? Math.round(sumOfGP/days*10)/10 : 0
        var winRate = numOfGames ? Math.round(numOfWins*100/numOfGames) : 50
        $('#statsText').html(
            'Average GP per game: <b>'+avgGpPerGame+'</b> (last '+numOfGames+' games)<br>'+
            'Average GP per hour: <b>'+avgGpPerHour+'</b> (last '+hours+' hours)<br>'+
            'Average GP per day: <b>'+avgGpPerDay+'</b> (last '+days+' days)<br>'+
            'Win rate: <b>'+winRate+'%</b> (last '+days+' days)<br>'
        )
//        console.log('hours:', hours)
//        console.log('days:', days)
//        console.log('numOfGames:', numOfGames)
//        console.log('sumOfGP:', sumOfGP)

        // Daily
        new Chart(document.getElementById('gpChart2'), {
            type: 'line',
            data: {
                labels: labelsDaily,
                datasets: [{
                    label: 'Lose',
                    backgroundColor: "rgba(255,0,0,0)",
                    borderColor: "rgba(255,0,0,1)",
                    borderWidth: 2,
                    hoverBackgroundColor: "rgba(120,120,220,0.6)",
                    hoverBorderColor: "rgba(220,220,220,1)",
                    data: valuesDailyLose
                },{
                    label: 'Win',
                    backgroundColor: "rgba(0,255,0,0)",
                    borderColor: "rgba(0,255,0,1)",
                    borderWidth: 2,
                    hoverBackgroundColor: "rgba(120,120,220,0.6)",
                    hoverBorderColor: "rgba(220,220,220,1)",
                    data: valuesDailyWin
                },{
                    label: 'GP',
                    backgroundColor: "rgba(255,255,0,0.2)",
                    borderColor: "rgba(255,255,0,1)",
                    borderWidth: 2,
                    hoverBackgroundColor: "rgba(120,120,220,0.6)",
                    hoverBorderColor: "rgba(220,220,220,1)",
                    data: valuesDailyGP
                }]
            },
            options: {
                title: {
                    display: true,
                    text: 'Daily ' + tzs
                }
            }
        })

        // Hourly
        new Chart(document.getElementById('gpChart'), {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Lose',
                    backgroundColor: "rgba(255,0,0,0)",
                    borderColor: "rgba(255,0,0,1)",
                    borderWidth: 2,
                    hoverBackgroundColor: "rgba(120,120,220,0.6)",
                    hoverBorderColor: "rgba(220,220,220,1)",
                    data: valuesHourlyLose
                },{
                    label: 'Win',
                    backgroundColor: "rgba(0,255,0,0)",
                    borderColor: "rgba(0,255,0,1)",
                    borderWidth: 2,
                    hoverBackgroundColor: "rgba(120,120,220,0.6)",
                    hoverBorderColor: "rgba(220,220,220,1)",
                    data: valuesHourlyWin
                },{
                    label: 'GP',
                    backgroundColor: "rgba(255,255,0,0.2)",
                    borderColor: "rgba(255,255,0,1)",
                    borderWidth: 2,
                    hoverBackgroundColor: "rgba(120,120,220,0.6)",
                    hoverBorderColor: "rgba(220,220,220,1)",
                    data: valuesHourlyGP
                }]
            },
            options: {
                title: {
                    display: true,
                    text: 'Hourly ' + tzs
                }
            }
        })
    }
</script>
<style>
        html {
            height: 100%;
        }
        body {
            background: #3364a6 url({{user.bg_url}}) no-repeat center center fixed;
            background-size: cover;
            -webkit-text-size-adjust: 100%;
        }
    </style>
</head>
<body>
<div id="fb-root"></div>
<div id="titleTable" class="blackShadow">
<div id="titleTableLeft" class="cell">
<span id="icon"></span> <span id="titleText"><a href="/">DragonBound</a> > <a href="/user">User</a> > <a href="/user/{{user.game_id}}">{{user.game_id}}</a></span>
</div>
{{!-- <div id="titleTableRight" class="cell right">
<a href="/user/Tio lenguado">Tio lenguado</a> | <a href="/settings">Settings</a> | <a href="/logout?next=/user/{{user.game_id}}">Logout</a>
</div> --}}
</div>
<div id="body">
<div id="mainBox">
<div id="topBar">
<div id="photoDiv" class="PhotoDiv"></div> <script>Img2Div2($('#photoDiv'), '{{user.photo_url}}')</script>
<div class="pageCoverTitle">
<span id="profileName"><a class="noUnderline" href="/user/{{user.game_id}}">{{user.game_id}}</a> <span class="span_rank rank rank{{user.rank}}"></span></span>
</div>
<div id="MyPlayer"></div>
<script>
            PlayerAnim($('#MyPlayer'), [
                {file: 'af03038.png', type:'f', graphics: [[78,79,0,55],15]},{file: 'fh07319_MjO4w.png', type:'h', graphics: [[53,37,6,29],[46,36,4,29],[28,36,2,29],[29,37,2,29],[28,36,2,29],[29,36,3,29],[28,35,3,29],1,[27,35,3,29],2,[53,37,6,29],[53,36,6,29],[54,36,7,29],2,[54,35,7,29],[57,35,8,29],[59,33,8,28],[57,33,8,28],[55,33,8,28],1]},{file: 'fb07321_I7bNa.png', type:'b', graphics: [[58,27,8,6],1,[58,26,8,6],[57,25,8,6],[54,30,8,11],[57,25,8,6],[58,26,8,6],1,[58,30,8,6],[58,34,8,6],[58,33,8,6]]},{file: 'ag00036.png', type:'g', graphics: [[26,13,3,18],[27,13,3,18],2,[28,13,4,18],[27,13,4,18],3,[28,13,5,18],1,[19,12,1,16],7,[19,13,0,16],2]},{file: 'b204848.png', type:'1', graphics: [[176,54,-6,-2]]},{file: 'f203776.png', type:'2', graphics: [[188,77,0,0],5]},
            ])
        </script>
<button id="reportBtn">Report</button>
<span id="reportMenu" class="hide">
<button id="reportPrn">Report porn or inappropriate photo</button><br><br>
<div style="text-align: right"><button id="reportCancel">Cancel</button></div>
</span>
</div>
<div id="leftBar">
<div class="Box">
<div class="boxTitle">About</div>
<div class="boxBody">
<div class="infoLine"> <span class="infoLineField">GP</span> <span class="infoLineData">{{commatize user.gp}}</span> </div>
<div class="infoLine"> <span class="infoLineField">Guild</span> <span class="infoLineData">No Guild</span> </div>
<div class="infoLine"> <span class="infoLineField">Gender</span> <span class="infoLineData">{{user.gender}}</span> </div>
<div class="infoLine"> <span class="infoLineField">Avatars</span> <span class="infoLineData rightAlign">28</span> </div>
<div class="infoLine"> <span class="infoLineField">Win Rate</span> <span class="infoLineData">{{user.rate}}%</span> </div>
<div class="infoLine"> <span class="infoLineField">Games</span> <span class="infoLineData">{{commatize user.win}} Win, {{commatize user.loss}} Lose</span></div>
<div class="infoLine"> <span class="infoLineField">Joined DB</span> <span class="infoLineData">June 15, 2020, 4:49 p.m.</span> </div>
</div>
</div>
<div class="Box hide" id="GPStats">
<div class="boxTitle">GP Stats</div>
<div class="boxBody" style="padding: 0;">
<div id="statsText"></div>
<canvas id="gpChart2" width="400" height="400"></canvas>
<canvas id="gpChart" width="400" height="400"></canvas>
</div>
</div>
<div class="Box">
<div class="boxTitle">Reputation</div>
<div class="boxBody">
Views: 173
<br><br>
Likes: <div class="fb-like" data-href="http://dragonbound.net/u/10266377" data-send="true" data-width="293" data-show-faces="true" data-colorscheme="dark"></div>
</div>
</div>
<div class="Box">
<div class="boxTitle">Friends</div>
<div class="boxBody">
Private
</div>
</div>
</div>
<div id="rightBar">

</div>
<div class="clearFloat"></div>
</div>
</div>
</body>
</html>
<script>setTimeout(()=>{setTimeout=setInterval=()=>{}},9781)</script>
